#!/usr/bin/env bash

# TODO: Make a ffmpeg script which takes all the mp4 files in a folder (recursively) and output them in the same position mp3 file
#
# E.g.:
# Videos
# ├── Clips
# │   ├── clip1.mp4
# │   └── clip2.mp4
# ├── Movies
# │   ├── movie1.mp4
# │   └── movie2.mp4
# └── Songs
#     ├── Song1.mp4
#     └── Song2.mp4
# music-extract Videos
#
# The above folder will create another folder with the position of file with just there audio
# Music
# ├── Clips
# │   ├── clip1.mp3
# │   └── clip2.mp3
# ├── Movies
# │   ├── movie1.mp3
# │   └── movie2.mp3
# └── Songs
#     ├── Song1.mp3
#     └── Song2.mp3


extract_audio() {
    local input_folder="$1"
    local output_folder="$2"

    if [ ! -d "$input_folder" ]; then
        echo "Input folder '$input_folder' not found."
        exit 1
    fi

    mkdir -p "$output_folder"

    find "$input_folder" -type f -name "*.mp4" | while IFS= read -r file; do
        file_name=$(basename -- "$file")
        file_name_without_extension="${file_name%.*}"

        ffmpeg -i "$file" -vn -acodec copy "$output_folder/$file_name_without_extension.mp3" >/dev/null 2>&1

        if [ $? -eq 0 ]; then
            echo "Audio extracted from '$file' and saved as '$output_folder/$file_name_without_extension.mp3'."
        else
            echo "Failed to extract audio from '$file'."
        fi
    done

    echo "Audio extraction completed."
}

read -p "Enter the path of the input folder containing MP4 files: " input_folder
read -p "Enter the path of the output folder to save the extracted audio files (will be created if not exist): " output_folder

extract_audio "$input_folder" "$output_folder"
