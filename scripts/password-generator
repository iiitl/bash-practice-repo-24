#!/usr/bin/env bash

# Issue: Implement Password Generation Functions
# Description:
# Create a function that generates passwords, The password should consist of uppercase letters, lowercase letters, numbers, and special characters. The function should take in a single argument, which is the length of the password to generate. The function should return the generated password.

generate_password() {
    # Define the characters to use in generating the password
    characters="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+-=[]{}|;:,.<>?/~"

    # Get the length of the password from the first argument
    length=$1

    # Initialize an empty variable to store the generated password
    password=""

    # Loop through the desired length and randomly select characters
    for (( i=0; i<length; i++ )); do
        # Generate a random index to select a character from the character set
        index=$((RANDOM % ${#characters}))
        
        # Append the selected character to the password
        password="${password}${characters:index:1}"
    done

    # Print the generated password
    echo "$password"
}

# Call the function with the desired password length as an argument
generate_password "$@"
gi